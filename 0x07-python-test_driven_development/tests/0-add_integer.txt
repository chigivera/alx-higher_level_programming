# Test cases for add_integer function

# Import the function
>>> add_integer = __import__('0-add_integer').add_integer

# Test normal integer addition
>>> add_integer(1, 2)
3

# Test with negative numbers
>>> add_integer(100, -2)
98

# Test with one argument (default b=98)
>>> add_integer(2)
100

# Test with float arguments
>>> add_integer(100.3, -2)
98

# Test with float and integer
>>> add_integer(4.9, 5.1)
9

# Test with non-integer or non-float arguments
>>> add_integer(4, "School")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

>>> add_integer("Hello", 3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Test with None
>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Test overflow
>>> add_integer(float('inf'), 0)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

# Test NaN
>>> add_integer(float('nan'), 0)
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer